<?php include 'layout_header.php'; ?>

<section class="day-header">
    <h2><?php echo $titulo; ?></h2>
    <p class="date"><?php echo $fecha; ?></p>
</section>

<section class="content-section">

    <!-- Resumen del Día -->
    <div class="card">
        <h3>Resumen del Día</h3>
        <p class="info-text">El segundo día de la Semana de Sistemas 2025 estuvo dedicado a talleres prácticos que demostraron la aplicación directa de tecnologías y metodologías modernas en el desarrollo profesional. Los participantes tuvieron la oportunidad de aprender sobre análisis de datos para decisiones estratégicas y desarrollo web ágil con herramientas contemporáneas.</p>
    </div>

    <!-- PRIMER TALLER: TOMA DE DECISIONES BASADAS EN DATOS -->
    <div class="card">
        <h3>Toma de Decisiones Estratégicas Basadas en Datos</h3>
        <p class="ponente-badge">Msc. Enrique Cortez</p>

        <h4>Introducción al Taller</h4>
        <p>El Msc. Enrique Cortez dirigió un taller fundamental que exploró cómo transformar datos crudos en información valiosa para la toma de decisiones estratégicas en organizaciones modernas. A través de ejemplos prácticos y casos reales, los participantes aprendieron a entender la diferencia crucial entre datos aislados, información organizada y conocimiento aplicable.</p>

        <h4>Contenido Desarrollado</h4>

        <h5>1. Fundamentos: ¿Qué es un Dato y Cómo se Construye la Información?</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_04.png" alt="Jerarquía de datos a conocimiento" class="slide-image">
            <p class="image-caption">Representación visual mediante bloques de construcción que ilustra la progresión jerárquica desde un dato aislado hasta estructuras complejas de conocimiento, mostrando cómo la organización y agregación de datos genera información y eventualmente conocimiento aplicable</p>
        </div>
        <p>El taller inició con una explicación conceptual fundamental utilizando una metáfora visual altamente efectiva: bloques de construcción tipo Lego que representan la evolución progresiva de los datos. Esta analogía permitió a los participantes comprender de manera intuitiva un concepto técnicamente complejo.</p>
        <p>La presentación estableció cuatro niveles jerárquicos claramente diferenciados:</p>
        <p><strong>Nivel 1 - Un Bloque Individual (Dato como Unidad Aislada):</strong> Representa un solo dato, completamente descontextualizado y sin significado por sí mismo. Por ejemplo, el número "25" aislado no nos dice nada útil; podría ser una edad, una temperatura, un precio o cualquier otra medida. Este es el nivel más básico y fundamental de la información.</p>
        <p><strong>Nivel 2 - Diez Bloques Desordenados (Datos sin Organizar):</strong> Aquí vemos múltiples datos que existen pero carecen de estructura o relación aparente entre sí. Son datos recopilados pero no procesados. Siguiendo el ejemplo anterior, podríamos tener "25", "Juan", "octubre", "temperatura" sin ninguna conexión clara entre estos elementos.</p>
        <p><strong>Nivel 3 - Cien Bloques Ordenados (Información Estructurada):</strong> En este nivel crítico, los datos han sido organizados siguiendo criterios lógicos y significativos, transformándose en información útil. Los bloques ahora forman filas ordenadas, representando registros estructurados en tablas o bases de datos. Por ejemplo, "Juan tiene 25 años y su temperatura corporal medida en octubre fue de 36.5°C" ya constituye información procesable.</p>
        <p><strong>Nivel 4 - Castillo con Bloques (Conocimiento Complejo):</strong> El nivel más avanzado donde la información estructurada se combina, analiza y contextualiza para generar conocimiento aplicable que permite tomar decisiones estratégicas. Siguiendo nuestro ejemplo, el conocimiento sería: "Los pacientes menores de 30 años en octubre presentan menor incidencia de fiebres estacionales, lo que sugiere implementar campañas de vacunación enfocadas en grupos de mayor edad".</p>
        <p>Esta progresión ilustra la fórmula fundamental presentada en la diapositiva: <strong>Dato (unidad aislada) → Datos organizados (información) → Estructuras complejas (conocimiento)</strong>. El mensaje clave es que los datos por sí solos tienen valor limitado; su verdadero poder emerge cuando se organizan, procesan y contextualizan adecuadamente.</p>

        <h5>2. Datos Aplicados a Sucesos de la Vida Diaria</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_03.png" alt="Aplicaciones prácticas de datos" class="slide-image">
            <p class="image-caption">Ejemplos concretos de cómo los datos organizados se aplican en situaciones cotidianas: seguimiento de actividad física mediante pasos diarios, optimización del consumo eléctrico en el hogar y control de gastos personales para mejorar finanzas</p>
        </div>
        <p>El Msc. Cortez continuó el taller conectando los conceptos teóricos con aplicaciones prácticas que todos los participantes podían relacionar con su vida cotidiana. Esta estrategia pedagógica demostró que el análisis de datos no es exclusivo de grandes corporaciones, sino una habilidad aplicable a nivel personal.</p>
        <p>Se presentaron tres casos de uso cotidianos que ilustran perfectamente cómo convertir datos en decisiones:</p>
        <p><strong>Caso 1 - Pasos Diarios (Actividad Física):</strong> Las aplicaciones de salud y dispositivos wearables como smartwatches registran constantemente nuestros pasos diarios. Un dato aislado como "8,500 pasos el lunes" tiene valor limitado. Sin embargo, cuando recopilamos estos datos durante semanas y meses, podemos identificar patrones: quizás los lunes y martes caminamos más por nuestra rutina laboral, mientras que los fines de semana somos más sedentarios. Esta información nos permite tomar decisiones estratégicas personales: establecer metas realistas como "aumentar mis pasos de fin de semana en un 30%" o "caminar 10,000 pasos diarios". El histórico de datos transforma un número aislado en conocimiento accionable sobre nuestros hábitos de salud.</p>
        <p><strong>Caso 2 - Consumo Eléctrico (Eficiencia Energética):</strong> Los recibos de electricidad mensuales proporcionan datos sobre nuestro consumo en kilovatios-hora. Al analizar estos datos a lo largo del tiempo y correlacionarlos con nuestros hábitos, podemos identificar patrones de consumo problemáticos. Por ejemplo, podríamos descubrir que el consumo se dispara en julio-agosto por el uso intensivo de aire acondicionado, o que el consumo nocturno es anormalmente alto por electrodomésticos en modo stand-by. Esta información permite tomar decisiones concretas de ahorro: ajustar la temperatura del aire acondicionado dos grados más, desconectar aparatos innecesarios por la noche, o invertir en electrodomésticos más eficientes. El conocimiento derivado del análisis de datos se traduce directamente en ahorro económico mensurable.</p>
        <p><strong>Caso 3 - Gastos Personales (Gestión Financiera):</strong> Aplicaciones de banca móvil y gestión financiera registran automáticamente cada transacción que realizamos. Un gasto individual de "$3.50 en café" parece insignificante, pero al categorizar y analizar meses de transacciones, podemos detectar "fugas" financieras importantes: quizás gastamos $105 mensuales en café ($3.50 × 30 días), $80 en suscripciones digitales que apenas usamos, o $200 en comidas fuera de casa. Esta información organizada nos permite optimizar nuestro presupuesto mensual de forma estratégica: reducir gastos innecesarios, redirigir fondos hacia ahorros o inversiones, y establecer límites conscientes de gasto por categoría. Los datos transformados en conocimiento nos dan control real sobre nuestras finanzas personales.</p>
        <p>Estos ejemplos demostraron un principio fundamental: el análisis de datos no requiere software especializado de millones de dólares ni equipos de científicos de datos. Con herramientas básicas como hojas de cálculo, aplicaciones móviles gratuitas y disciplina para registrar información consistentemente, cualquier persona puede aplicar estos principios para mejorar aspectos concretos de su vida.</p>

        <h5>3. Caso de Estudio: Datos en la Educación Superior de El Salvador</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_02.png" alt="Estadísticas educación superior" class="slide-image">
            <p class="image-caption">Gráfico de barras que compara la matrícula o cantidad de egresados en las cinco carreras universitarias más populares en El Salvador: Administración de Empresas lidera significativamente, seguida por Derecho, Sistemas/Informática, Salud e Ingeniería Industrial. Fuente: MINED - Estadísticas de Educación Superior</p>
        </div>
        <p>Para demostrar la aplicación de análisis de datos en contextos más amplios y con implicaciones estratégicas para instituciones, el Msc. Cortez presentó un caso real del sector educativo salvadoreño, utilizando estadísticas oficiales del Ministerio de Educación (MINED).</p>
        <p>El gráfico de barras presentado revela información estratégicamente valiosa sobre las tendencias educativas en El Salvador. Los datos muestran las cinco áreas de estudio universitarias con mayor matrícula o número de egresados:</p>
        <p><strong>Administración de Empresas</strong> domina claramente el panorama educativo con aproximadamente 28-30 unidades en la escala (que podría representar miles de estudiantes o porcentaje de matrícula total). Esta preferencia masiva refleja la percepción generalizada de que esta carrera ofrece versatilidad laboral y oportunidades en prácticamente cualquier sector económico.</p>
        <p><strong>Derecho</strong> ocupa el segundo lugar con aproximadamente 21 unidades, demostrando el atractivo persistente de las profesiones tradicionales liberales en la cultura latinoamericana, donde los abogados mantienen prestigio social considerable.</p>
        <p><strong>Sistemas/Informática</strong> aparece en tercer lugar con cerca de 16 unidades, un dato particularmente relevante para los asistentes a la Semana de Sistemas. Aunque es la tercera carrera más popular, la brecha con Administración de Empresas es significativa, lo que podría indicar una oportunidad de crecimiento en este campo tecnológico.</p>
        <p><strong>Salud</strong> registra aproximadamente 14 unidades, reflejando la demanda constante de profesionales médicos, enfermería y carreras relacionadas, especialmente relevante post-pandemia.</p>
        <p><strong>Ingeniería Industrial</strong> cierra el top cinco con cerca de 10 unidades, mostrando menor popularidad relativa pero representando un campo técnico esencial para el desarrollo industrial del país.</p>
        <p><strong>Análisis Estratégico e Implicaciones:</strong> Este conjunto de datos, cuando se analiza estratégicamente, genera conocimiento accionable para múltiples stakeholders. Las universidades pueden usar esta información para ajustar su oferta académica, identificando oportunidades en carreras con menor saturación pero alta demanda laboral. Los estudiantes pueden tomar decisiones más informadas considerando la competencia que enfrentarán en el mercado laboral. El gobierno puede identificar brechas entre la oferta educativa y las necesidades del mercado, diseñando políticas de incentivos para carreras estratégicas con baja matrícula pero alta demanda empresarial.</p>
        <p>El caso ilustró perfectamente cómo datos gubernamentales públicos, cuando se visualizan y analizan adecuadamente, se transforman en conocimiento estratégico que puede influir en decisiones de política pública, planificación institucional y orientación vocacional. La fuente oficial (MINED - Estadísticas de Educación Superior) añade credibilidad y permite que el análisis sea replicable y actualizable.</p>

        <h5>4. Ejercicio Práctico: Análisis de Datos de Farmacias</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_01.png" alt="Dataset de transacciones farmacéuticas" class="slide-image">
            <p class="image-caption">Hoja de cálculo mostrando un dataset real de transacciones de múltiples farmacias, incluyendo fecha, ubicación, cliente, código de producto, tipo de medicamento, cantidad y precio, utilizado como ejercicio práctico para análisis de datos y toma de decisiones empresariales</p>
        </div>
        <p>El taller culminó con un ejercicio práctico altamente relevante que permitió a los participantes aplicar directamente todos los conceptos aprendidos. El Msc. Cortez presentó un dataset real (o realista) de transacciones de una cadena de farmacias operando en diferentes ciudades de El Salvador.</p>
        <p>El conjunto de datos mostrado en la hoja de cálculo incluye información estructurada en columnas claramente definidas: <strong>Fecha de Transacción</strong> (desde octubre 2024 hasta enero 2025), <strong>Farmacia/Sucursal</strong> (Farmacia Central, Farmacia Salud, Farmacia Oriente, Farmacia Popular), <strong>Ubicación Geográfica</strong> (La Union, Usulutan, San Miguel, Morazan), <strong>Nombre del Cliente</strong> (Rafaela, Tania, Juan Antonio, Amalia, etc.), <strong>Código de Producto</strong> (identificadores numéricos de 4-5 dígitos seguidos de palabras clave), <strong>Tipo de Medicamento</strong> (Antihistamínico, Antibiótico, Antipirético, Analgésico, Antiinflamatorio), <strong>Cantidad Vendida</strong> (unidades por transacción, típicamente 1-5), y <strong>Precio/Costo</strong> (valores en dólares, rangos desde $2.55 hasta $24.81).</p>
        <p>El dataset, presentado con formato de filas alternas en verde claro para facilitar su lectura, contiene 23 registros visibles y representa exactamente el tipo de información con la que los gerentes de farmacias trabajan diariamente.</p>
        <p><strong>Ejercicios de Análisis Propuestos:</strong> El facilitador guió a los participantes a través de preguntas estratégicas que este dataset puede responder, demostrando la transformación de datos en conocimiento accionable.</p>
        <p><strong>Análisis de Inventario y Demanda:</strong> ¿Qué tipo de medicamento se vende más frecuentemente? Contando las categorías, podemos determinar si los Antipiréticos o Antibióticos dominan las ventas, permitiendo optimizar el inventario. ¿Cuál es el precio promedio de transacción? Calculando el promedio de la columna de precios, la gerencia puede establecer estrategias de pricing y promociones.</p>
        <p><strong>Análisis Geográfico:</strong> ¿Qué sucursal genera más ingresos? Sumando los precios por ubicación, podemos identificar que quizás La Unión genera más ingresos que Morazán, lo que justificaría inversión diferenciada en cada sucursal. ¿Hay diferencias en los tipos de medicamentos vendidos por región? Tal vez en San Miguel se venden más Antibióticos mientras que en Usulután predominan los Analgésicos, sugiriendo necesidades de salud diferentes por zona.</p>
        <p><strong>Análisis Temporal:</strong> ¿Hay estacionalidad en las ventas? Comparando ventas de octubre 2024 vs enero 2025, podemos detectar patrones estacionales (más Antipiréticos en temporada de lluvia, por ejemplo). ¿Qué días/meses tienen mayor actividad? Esto permite optimizar la programación de personal.</p>
        <p><strong>Análisis de Rentabilidad:</strong> ¿Cuál es el ticket promedio por cliente? ¿Qué productos generan más ingresos totales? Esta información guía qué productos promocionar y cuáles considerar descontinuar.</p>
        <p>Los participantes trabajaron en grupos pequeños analizando el dataset con herramientas básicas de hoja de cálculo, practicando funciones como SUMA, PROMEDIO, CONTAR.SI, tablas dinámicas y gráficos. El ejercicio demostró que con datos bien estructurados y preguntas correctas, incluso herramientas simples pueden generar insights empresariales valiosos.</p>
        <p>El valor pedagógico de este ejercicio radicó en su naturaleza realista y aplicable: los participantes no solo aprendieron teoría sobre análisis de datos, sino que experimentaron directamente el proceso completo de transformar datos crudos en recomendaciones estratégicas concretas que un gerente de farmacias podría implementar inmediatamente para mejorar operaciones, aumentar rentabilidad y servir mejor a sus clientes.</p>
    </div>

    <!-- SEGUNDO TALLER: CRUD CON LARAVEL Y FILAMENT -->
    <div class="card">
        <h3>Construyendo un CRUD en Minutos con Laravel y Filament</h3>
        <p class="ponente-badge">Ing. Gabriel Castillo</p>

        <h4>Introducción al Taller</h4>
        <p>El Ing. Gabriel Castillo condujo un taller técnico altamente práctico que demostró las capacidades del framework Laravel combinado con Filament, un panel de administración moderno que permite desarrollar sistemas CRUD (Create, Read, Update, Delete) completos en fracciones del tiempo que tomarían con desarrollo tradicional. A través de una demostración en vivo, los participantes presenciaron la construcción de un sistema funcional de gestión de productos, usuarios, roles y tallas.</p>

        <h4>Tecnologías Presentadas</h4>
        <p><strong>Laravel:</strong> Framework de PHP reconocido mundialmente como uno de los más elegantes y potentes para desarrollo web. Laravel proporciona una sintaxis expresiva y herramientas robustas para routing, autenticación, migraciones de bases de datos, validación de formularios y mucho más. Su filosofía de "convención sobre configuración" permite a los desarrolladores ser productivos rápidamente sin sacrificar flexibilidad.</p>
        <p><strong>Filament:</strong> Un conjunto de componentes y herramientas para construir paneles de administración en Laravel con velocidad extraordinaria. Filament proporciona formularios hermosos y funcionales, tablas de datos con búsqueda y filtrado, gestión de relaciones entre modelos, y una experiencia de usuario moderna, todo sin escribir prácticamente ningún código frontend. Es especialmente valioso para proyectos que requieren interfaces administrativas robustas sin invertir semanas en desarrollo de UI.</p>

        <h4>Sistema Desarrollado: Demostración Práctica</h4>

        <h5>1. Gestión de Usuarios: Creación de Nuevos Usuarios</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_05.png" alt="Formulario de creación de usuario" class="slide-image">
            <p class="image-caption">Interfaz del formulario de creación de usuarios en Filament, mostrando campos para nombre, correo electrónico, selección de roles, fecha de verificación de email y contraseña, con botones para crear, crear otro o cancelar la operación</p>
        </div>
        <p>El Ing. Castillo inició la demostración práctica mostrando la funcionalidad de gestión de usuarios, un componente fundamental en cualquier aplicación web moderna. La interfaz presentada es el formulario de creación de usuarios (Create User), accesible desde el menú lateral de navegación que muestra las secciones principales del sistema: Dashboard, Productos, Tallas y Users.</p>
        <p>El formulario incluye todos los campos esenciales para registrar un nuevo usuario en el sistema:</p>
        <p><strong>Name (Nombre)*:</strong> Campo de texto obligatorio (indicado por el asterisco) donde se ingresa el nombre completo del usuario. Este campo típicamente incluye validación para asegurar que no esté vacío y que tenga una longitud mínima razonable.</p>
        <p><strong>Email address (Dirección de correo electrónico)*:</strong> Campo obligatorio con validación automática para asegurar que el formato del email sea válido (contiene @ y dominio). Laravel incluye validación de email integrada y Filament la aplica automáticamente.</p>
        <p><strong>Roles*:</strong> Un campo desplegable (dropdown) obligatorio que permite asignar roles al usuario. Este es un componente crítico del sistema de autorización, donde diferentes roles (como Admin, Editor, Usuario Regular) otorgan diferentes niveles de permisos. La selección dice "Select an option", indicando que es un menú desplegable con opciones precargadas del sistema de roles.</p>
        <p><strong>Email verified at (Email verificado en):</strong> Un campo de fecha y hora (datetime picker) opcional que permite registrar manualmente cuándo se verificó el email del usuario. Este campo es parte de sistemas de verificación de correo electrónico donde los usuarios deben confirmar su cuenta haciendo clic en un enlace enviado por email. El formato mostrado "dd/mm/aaaa --:--:--" es el placeholder del selector de fecha.</p>
        <p><strong>Password (Contraseña)*:</strong> Campo obligatorio de tipo password (los caracteres se muestran como puntos u asteriscos por seguridad) donde se establece la contraseña inicial del usuario. Laravel automáticamente encripta las contraseñas usando hashing bcrypt antes de almacenarlas en la base de datos, siguiendo las mejores prácticas de seguridad.</p>
        <p>Al pie del formulario, Filament proporciona automáticamente tres botones de acción claramente diferenciados: <strong>Create (Crear)</strong> en amarillo/naranja, el botón principal que guarda el nuevo usuario y regresa a la lista; <strong>Create & create another (Crear y crear otro)</strong>, que guarda el usuario actual y mantiene el formulario abierto para agregar otro usuario inmediatamente, optimizando el flujo cuando se necesitan crear múltiples registros; y <strong>Cancel (Cancelar)</strong>, que descarta los cambios y regresa a la lista de usuarios sin guardar.</p>
        <p>Lo notable de esta interfaz es que todo el código necesario para generar este formulario completo con validación, encriptación de contraseñas, gestión de relaciones con roles, y manejo de la verificación de email, se reduce a aproximadamente 20-30 líneas de código en Filament, comparado con cientos de líneas que requerirían implementación manual tradicional.</p>

        <h5>2. Gestión de Roles: Sistema de Permisos y Autorización</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_06.png" alt="Lista de roles del sistema" class="slide-image">
            <p class="image-caption">Interfaz de gestión de roles mostrando una tabla con el rol Super Admin creado, incluyendo guard name (web), cantidad de permisos (11), fecha de actualización y opciones para editar o eliminar roles, con funcionalidades de búsqueda y paginación</p>
        </div>
        <p>Continuando con la demostración del sistema de administración, el Ing. Castillo presentó la funcionalidad de gestión de roles, un componente esencial para implementar control de acceso basado en roles (RBAC - Role-Based Access Control) en aplicaciones empresariales.</p>
        <p>La interfaz muestra la sección de Roles, accesible desde el menú lateral bajo "Filament Shield", indicando que se está utilizando el plugin Spatie Permission integrado con Filament Shield para manejar permisos de manera robusta y escalable.</p>
        <p>En la parte superior derecha destaca un botón prominente <strong>"New Role"</strong> (Nuevo Rol) en amarillo/naranja, permitiendo crear roles adicionales fácilmente. Este botón lleva a un formulario similar al de creación de usuarios, donde se define el nombre del rol y se seleccionan qué permisos específicos tendrá.</p>
        <p>La tabla de datos muestra los roles existentes en el sistema con columnas informativamente estructuradas:</p>
        <p><strong>Name (Nombre):</strong> "Super Admin" - Este es típicamente el rol de máximo privilegio en el sistema, con acceso completo a todas las funcionalidades. La nomenclatura sugiere un sistema de jerarquía de roles donde podrían existir también "Admin", "Editor", "User", etc.</p>
        <p><strong>Guard Name (Nombre del Guard):</strong> "web" (destacado en amarillo/naranja) - En Laravel, los "guards" definen cómo se autentican los usuarios para diferentes partes del sistema. El guard "web" es el estándar para autenticación basada en sesiones de aplicaciones web tradicionales. Podrían existir otros guards como "api" para autenticación de APIs mediante tokens.</p>
        <p><strong>Permissions (Permisos):</strong> "11" (también destacado en amarillo/naranja) - Indica que este rol tiene 11 permisos específicos asignados. Estos permisos probablemente incluyen acciones como "create users", "edit products", "delete roles", "view dashboard", etc. El número indica granularidad en el control de acceso, permitiendo asignar permisos específicos en lugar de todo o nada.</p>
        <p><strong>Updated At (Actualizado en):</strong> "Oct 14, 2025 17:20:09" - Timestamp que registra la última modificación del rol, útil para auditoría y seguimiento de cambios en el sistema de permisos.</p>
        <p>A la derecha de cada fila de la tabla, hay dos acciones disponibles: <strong>Edit (Editar)</strong> en naranja, permite modificar el nombre del rol o ajustar qué permisos tiene asignados, y <strong>Delete (Eliminar)</strong> en rojo, permite borrar roles que ya no son necesarios (típicamente con confirmación para prevenir eliminación accidental de roles en uso).</p>
        <p>En la parte inferior de la interfaz se encuentran controles de tabla estándar: un campo de <strong>Search (Búsqueda)</strong> que permite filtrar roles por nombre en tiempo real, y un selector de <strong>"Per page 10"</strong> que controla cuántos registros se muestran por página, con opciones típicamente de 10, 25, 50 o 100 registros. La tabla indica "Showing 1 result" confirmando que solo existe un rol configurado hasta el momento.</p>
        <p>La implementación de este sistema completo de roles y permisos, que en desarrollo tradicional podría tomar días o incluso semanas, se logra con Filament en minutos mediante la integración del paquete Spatie Laravel-Permission y algunas líneas de configuración. El sistema automáticamente maneja la sincronización entre usuarios, roles y permisos, middleware de autorización, y políticas de acceso.</p>

        <h5>3. Gestión de Productos: Listado y Visualización de Inventario</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_07.png" alt="Lista de productos" class="slide-image">
            <p class="image-caption">Tabla de productos mostrando tres registros de Camisa Tipo Polo con sus atributos: nombre, descripción, precio ($10), stock total (25 o 0), tallas disponibles (M, S), y opciones para visualizar o editar cada producto</p>
        </div>
        <p>El Ing. Castillo procedió a demostrar el módulo central del sistema: la gestión de productos, mostrando cómo Filament genera automáticamente interfaces robustas para operaciones CRUD completas sobre modelos de base de datos.</p>
        <p>La interfaz presenta la sección de Productos (activa en el menú lateral), con un botón destacado <strong>"New producto"</strong> (Nuevo Producto) en la esquina superior derecha que permite agregar productos al inventario.</p>
        <p>La tabla de productos muestra varios registros del mismo artículo "Camisa Tipo Polo" con información estructurada en columnas:</p>
        <p><strong>Nombre:</strong> "Camisa Tipo Polo" - El nombre descriptivo del producto que aparece en el sistema. Los tres registros muestran el mismo nombre, sugiriendo que probablemente son variaciones del mismo producto base (diferentes colores o proveedores) o datos de prueba ingresados durante la demostración.</p>
        <p><strong>Descripción:</strong> Campo vacío en los tres registros mostrados. Este campo opcional permitiría agregar detalles adicionales sobre el producto como material, instrucciones de cuidado, características especiales, etc.</p>
        <p><strong>Precio:</strong> "$10" para todos los registros. El símbolo de dólar indica que el sistema maneja moneda, y el precio está formateado apropiadamente. Filament automáticamente puede formatear campos numéricos como moneda cuando se configura el tipo de campo adecuado.</p>
        <p><strong>Stock total:</strong> Muestra "25" para el primer registro y "0" para los otros dos. Esta columna es crítica para gestión de inventario, permitiendo a los administradores identificar rápidamente productos que necesitan reabastecimiento (stock 0) versus productos disponibles. El valor probablemente se calcula automáticamente sumando las cantidades de todas las tallas del producto.</p>
        <p><strong>Tallas:</strong> Muestra "M, S" en el primer registro, indicando que este producto está disponible en tallas Medium y Small. Los registros con stock 0 no muestran tallas, sugiriendo que las tallas están vinculadas a la disponibilidad de inventario. Esta columna demuestra una relación de base de datos entre la tabla de productos y una tabla de tallas, mostrando cómo Filament maneja relaciones many-to-many elegantemente.</p>
        <p>Cada fila de producto incluye acciones disponibles a la derecha: <strong>View (Ver)</strong> con ícono de ojo, permite visualizar todos los detalles del producto en modo solo lectura, útil para consultas rápidas sin riesgo de modificación accidental, y <strong>Edit (Editar)</strong> en naranja, abre el formulario de edición completo donde se pueden modificar todos los atributos del producto, actualizar inventario, o cambiar tallas disponibles.</p>
        <p>La interfaz incluye funcionalidades estándar de tablas de datos modernas: campo de <strong>búsqueda</strong> en la parte superior derecha que permite filtrar productos por nombre o descripción en tiempo real, contador mostrando <strong>"Showing 1 to 3 of 3 results"</strong> indicando que hay exactamente tres productos en el sistema, y selector de <strong>"Per page 10"</strong> para controlar la paginación cuando hay más registros.</p>
        <p>Un detalle adicional visible es el ícono de filtro/configuración en la esquina superior derecha, que típicamente permite personalizar qué columnas se muestran en la tabla, aplicar filtros avanzados por rango de precios o stock, u ordenar los resultados por diferentes criterios.</p>

        <h5>4. Creación de Productos: Formulario Completo</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_08.png" alt="Formulario de creación de producto" class="slide-image">
            <p class="image-caption">Formulario para crear productos nuevo mostrando campos para nombre del producto, descripción, precio en dólares, selector de imagen y botones de acción para guardar, crear otro o cancelar</p>
        </div>
        <p>Para demostrar la facilidad de agregar nuevos productos al inventario, el Ing. Castillo navegó al formulario de creación de productos, mostrando la interfaz que aparece al hacer clic en el botón "New producto".</p>
        <p>El breadcrumb de navegación muestra "Productos > Create", indicando claramente dónde se encuentra el usuario dentro del sistema y permitiendo regresar fácilmente a la lista de productos.</p>
        <p>El formulario "Create Producto" incluye todos los campos necesarios para registrar un nuevo artículo en el inventario:</p>
        <p><strong>Nombre del producto* (campo obligatorio):</strong> Se muestra con el valor de ejemplo "Ropa", un campo de texto simple donde se ingresa el nombre descriptivo del producto. La validación del asterisco asegura que no se puede guardar un producto sin nombre.</p>
        <p><strong>Descripción del producto (campo opcional):</strong> También contiene "Ropa" como ejemplo, un área de texto más grande que permite descripciones detalladas del producto. Al ser opcional, los productos pueden guardarse sin descripción si no es necesaria.</p>
        <p><strong>Precio* (campo obligatorio con formato de moneda):</strong> Muestra "$10.00" como ejemplo, con el símbolo de dólar prefijado automáticamente. Este campo utiliza un input numérico que acepta decimales, formateando apropiadamente los valores monetarios. Filament valida que sea un número válido mayor que cero.</p>
        <p><strong>Imagen del producto* (campo obligatorio):</strong> Muestra un selector de archivo con el texto "Seleccionar archivo Sin archivos seleccionados". Este campo permite subir una imagen representativa del producto que aparecerá en catálogos o interfaces de cliente. Filament maneja automáticamente la subida de archivos, validación de tipos de imagen (JPG, PNG, etc.), redimensionamiento si es necesario, y almacenamiento seguro en el servidor o servicios de almacenamiento cloud como Amazon S3.</p>
        <p>Los botones de acción al final del formulario son idénticos a los de creación de usuarios: <strong>Create</strong> guarda el producto y regresa a la lista, <strong>Create & create another</strong> guarda y mantiene el formulario abierto para agregar más productos rápidamente, y <strong>Cancel</strong> descarta los cambios.</p>
        <p>Lo que el Ing. Castillo enfatizó durante esta demostración es que este formulario funcional completo, con validación de campos, manejo de subida de imágenes, formateo de moneda, y persistencia en base de datos, se genera con aproximadamente 15-20 líneas de código en Filament. El framework automáticamente crea el HTML del formulario, aplica estilos consistentes, maneja la validación tanto en frontend como backend, procesa la imagen subida, guarda el registro en la base de datos, y maneja errores apropiadamente, todo sin que el desarrollador tenga que escribir JavaScript, CSS o SQL manualmente.</p>

        <h5>5. Gestión de Tallas: Módulo de Inventario por Variante</h5>
        <div class="slide-image-container">
            <img src="/images/dia2/image_09.png" alt="Gestión de tallas" class="slide-image">
            <p class="image-caption">Interfaz de gestión de tallas mostrando una tabla vacía con columnas para Producto, Talla y Cantidad, con botón para crear tallas y funcionalidad de búsqueda, demostrando el estado inicial antes de agregar registros de inventario por talla</p>
        </div>
        <p>Para completar la demostración del sistema de inventario, el Ing. Castillo presentó el módulo de Tallas, un componente que permite gestionar el inventario granularmente por variantes de tamaño de cada producto.</p>
        <p>La interfaz muestra la sección de Tallas, con un botón <strong>"Crear talla"</strong> en amarillo/naranja que permite agregar nuevas combinaciones de producto-talla-cantidad al sistema.</p>
        <p>La tabla está configurada con tres columnas principales:</p>
        <p><strong>Producto:</strong> Mostraría qué producto específico se está variando (por ejemplo, "Camisa Tipo Polo"). Esta columna probablemente usa un selector desplegable al crear una talla que lista todos los productos existentes en el sistema.</p>
        <p><strong>Talla:</strong> Indicaría el tamaño específico (S, M, L, XL, etc.). Dependiendo de la implementación, esto podría ser un campo de texto libre o un selector con opciones predefinidas estándar.</p>
        <p><strong>Cantidad:</strong> Registraría cuántas unidades de ese producto en esa talla específica hay en inventario. Este es el campo crítico para control de stock detallado.</p>
        <p>La tabla actualmente muestra el mensaje <strong>"No se encontraron registros"</strong>, indicando que este módulo aún no tiene datos ingresados. Esto es común en sistemas recién configurados o en ambientes de demostración. El ícono "X" en el centro de la tabla vacía es el indicador visual estándar de Filament para ausencia de datos.</p>
        <p>La funcionalidad incluye un campo de <strong>"Buscar"</strong> en la parte superior para filtrar registros por nombre de producto o talla cuando existen múltiples combinaciones, e íconos de configuración a la derecha que permiten personalizar la vista de la tabla o exportar datos.</p>
        <p>El menú lateral muestra que este módulo está bajo una sección colapsable llamada "Productos", junto con opciones para "Productos" y "Tallas", sugiriendo una organización jerárquica lógica de funcionalidades relacionadas. Hay también una sección separada "Admin Management" con "Users", y "Filament Shield" con "Roles", demostrando cómo Filament permite estructurar aplicaciones complejas con múltiples módulos de manera organizada.</p>
        <p>Este módulo de tallas demuestra un concepto importante en sistemas de inventario: el manejo de variantes de productos. En lugar de crear productos completamente separados para cada talla, el sistema permite tener un producto base (Camisa Tipo Polo) con múltiples registros de talla, cada uno con su propio stock. Esto facilita reportes agregados (stock total de Camisas) mientras mantiene control granular (cuántas camisas talla M quedan).</p>

        <h4>Conclusiones del Taller</h4>
        <p>El Ing. Gabriel Castillo demostró exitosamente cómo herramientas modernas como Laravel y Filament han revolucionado el desarrollo web, reduciendo dramáticamente el tiempo y esfuerzo necesarios para crear aplicaciones empresariales completas. Lo que tradicionalmente requeriría semanas de desarrollo escribiendo formularios HTML, validación JavaScript, consultas SQL, manejo de sesiones, control de acceso y estilos CSS, ahora se logra en minutos u horas mediante configuración declarativa y convenciones inteligentes.</p>
        <p>El sistema completo demostrado incluye funcionalidades de nivel empresarial: autenticación y autorización robusta con roles y permisos granulares, gestión CRUD completa de múltiples entidades relacionadas, manejo de relaciones de base de datos many-to-many, subida y procesamiento de archivos, validación comprehensiva, interfaces responsivas y modernas, búsqueda y filtrado en tiempo real, paginación eficiente, y auditoría de cambios mediante timestamps.</p>
        <p>Los participantes del taller apreciaron especialmente la rapidez del desarrollo, la calidad profesional de las interfaces generadas automáticamente, la seguridad integrada sin configuración adicional, y la facilidad de extensión y personalización cuando se necesitan funcionalidades específicas. El enfoque pragmático del taller, mostrando código real funcionando en lugar de diapositivas teóricas, permitió a los asistentes visualizar cómo podrían aplicar estas herramientas en sus propios proyectos inmediatamente.</p>
    </div>

    <!-- Reflexión Personal -->
    <div class="card">
        <h3>Reflexión Personal</h3>
        <p>El segundo día de la Semana de Sistemas 2025 me brindó aprendizajes profundamente prácticos que complementan perfectamente las tecnologías del día anterior. La dualidad de talleres fue especialmente valiosa, abordando tanto la perspectiva analítica de datos como la implementación técnica de sistemas, dos pilares fundamentales del desarrollo profesional moderno.</p>

        <p>El taller del Msc. Enrique Cortez me hizo comprender que el valor real no reside en los datos mismos, sino en nuestra capacidad de transformarlos en conocimiento accionable. La progresión conceptual desde un dato aislado hasta estructuras complejas de conocimiento, ilustrada con la metáfora de bloques de construcción, cambió mi perspectiva sobre cómo abordar problemas empresariales. Ahora entiendo que antes de implementar cualquier solución tecnológica, debo identificar qué datos son relevantes, cómo organizarlos efectivamente y qué preguntas estratégicas pueden responder. El ejercicio práctico con el dataset de farmacias fue revelador porque demostró que no se necesitan herramientas sofisticadas de Business Intelligence para comenzar a extraer valor de los datos; basta con pensamiento analítico estructurado y herramientas básicas como hojas de cálculo.</p>

        <p>Por otro lado, el taller del Ing. Gabriel Castillo fue una revelación técnica. Como estudiante de sistemas, frecuentemente he sentido frustración por el tiempo que consume implementar funcionalidades básicas como autenticación, autorización y formularios CRUD. Ver cómo Laravel y Filament reducen semanas de desarrollo a minutos me mostró que la industria ha evolucionado hacia paradigmas de desarrollo que priorizan productividad sin sacrificar calidad. La demostración en vivo fue especialmente impactante porque no fue una presentación ensayada de diapositivas, sino código real funcionando, con todas sus complejidades de relaciones de bases de datos, validaciones y control de acceso. Me di cuenta de que dominar frameworks modernos ya no es opcional sino esencial para ser competitivo profesionalmente.</p>

        <p>La conexión entre ambos talleres también me resultó significativa. El sistema CRUD demostrado en el segundo taller generaría exactamente el tipo de datos estructurados que analizamos en el primer taller. Esto me hizo comprender el ciclo completo del trabajo con datos en aplicaciones empresariales: desarrollo de sistemas que capturan información correctamente, almacenamiento estructurado en bases de datos, y análisis posterior para toma de decisiones. Ambas competencias se complementan y fortalecen mutuamente.</p>

        <p class="conclusion-final">Este día me enseñó que el desarrollo de sistemas moderno requiere dos mentalidades complementarias: la del arquitecto que organiza y analiza información para generar valor estratégico, y la del ingeniero pragmático que utiliza herramientas modernas para construir soluciones eficientemente. Dominar ambas perspectivas es lo que distingue a un programador de un verdadero profesional de sistemas.</p>
    </div>

</section>

<?php include 'layout_footer.php'; ?>
